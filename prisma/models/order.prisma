/// ========================================
/// ORDER MODELS
/// ========================================

/// 실제 주문 정보
/// 실제 발생한 트레이딩 주문 정보를 기록
/// 진입(매수) 또는 청산(매도) 주문에 대한 가격, 수량, 수수료 등의 정보가 저장
model Order {
  id Int @id @default(autoincrement()) // 고유식별자
  account_id Int // Account 참조 (이 주문이 발생한 계좌)
  type OrderType // 주문 유형 (Open: 진입, Close: 청산)
  symbol_id Int // Symbol 참조 (주문 대상 종목)
  direction PositionDirectionType // 포지션 방향 (Long: 매수, Short: 매도)
  price String // 실제 체결된 평균 가격 - 부동소수점 오차 방지를 위해 문자열로 저장
  quantity String // 실제 체결된 수량 - 부동소수점 오차 방지를 위해 문자열로 저장
  leverage Float // 적용된 레버리지 배율 (예: 5배) - 정수값이므로 Float 사용
  fee String // 거래 수수료 (단위: 해당 통화) - 부동소수점 오차 방지를 위해 문자열로 저장
  created_at DateTime @default(now()) // 주문 생성 시각
  updated_at DateTime @updatedAt // 최종 수정 시각
  deleted_at DateTime? // Soft delete 시각 (null이면 활성 상태)

  // Relations
  account Account @relation(fields: [account_id], references: [id])
  symbol Symbol @relation(fields: [symbol_id], references: [id])
  
  // Sub-order relations
  open_order OpenOrder?
  close_order CloseOrder?

  @@index([account_id])
  @@index([symbol_id])
  @@index([type])
  @@index([created_at])
  @@index([deleted_at])
}

/// 진입 주문 상세 정보
/// 진입 주문의 상세 정보를 기록
/// 해당 주문이 어떤 트레이딩 기록(포지션)과 연결되어 있으며, 
/// 현재 미결제 수량이 얼마인지 저장
model OpenOrder {
  id Int @id @default(autoincrement()) // 고유식별자
  order_id Int @unique // Order 참조 (진입 주문)
  trading_id Int // Trading 참조 (연결된 매매 기록)
  unclosed_quantity String // 현재 미결제 계약 수량 - 부동소수점 오차 방지를 위해 문자열로 저장

  // Relations
  order Order @relation(fields: [order_id], references: [id])
  trading Trading @relation(fields: [trading_id], references: [id])

  @@index([trading_id])
}

/// 청산 주문 상세 정보
/// 청산 주문의 상세 정보를 기록
/// 해당 주문이 어떤 트레이딩 기록을 정산했는지, 
/// 손익 및 수익률을 기록하여 성과 분석에 활용
model CloseOrder {
  id Int @id @default(autoincrement()) // 고유식별자
  order_id Int @unique // Order 참조 (청산 주문)
  trading_id Int // Trading 참조 (연결된 매매 기록)
  pnl String // 실현 손익 (Profit and Loss) - 부동소수점 오차 방지를 위해 문자열로 저장
  realized_return_rate Float // 해당 주문의 수익률 (비율 단위) - 비율이므로 Float 사용

  // Relations
  order Order @relation(fields: [order_id], references: [id])
  trading Trading @relation(fields: [trading_id], references: [id])

  @@index([trading_id])
}
